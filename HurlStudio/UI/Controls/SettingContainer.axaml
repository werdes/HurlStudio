<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:controls="clr-namespace:HurlStudio.UI.Controls;assembly=HurlStudio"
             xmlns:converters="clr-namespace:HurlStudio.UI.Converters;assembly=HurlStudio"
             xmlns:localization="clr-namespace:HurlStudio.UI.Localization;assembly=HurlStudio"
             xmlns:vm="clr-namespace:HurlStudio.Model.HurlSettings;assembly=HurlStudio"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d" d:DesignWidth="300" d:DesignHeight="50"
             
             Name="Container"
             x:DataType="vm:HurlSettingContainer"
             x:Class="HurlStudio.UI.Controls.SettingContainer">
  <UserControl.Resources>
    <converters:IHurlSettingToLocalizedTitleConverter x:Key="IHurlSettingToLocalizedTitleConverter" />
    <converters:IHurlSettingToDisplayTextConverter x:Key="IHurlSettingToDisplayTextConverter" />
    <converters:BoolPositiveToBlurRadiusConverter x:Key="BoolPositiveToBlurRadiusConverter" />
    <converters:BoolTrueTo50PercentOpacityConverter x:Key="BoolTrueTo50PercentOpacityConverter" />
  </UserControl.Resources>

  <Grid>
    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition Height="23" />
        <RowDefinition Height="*" />
      </Grid.RowDefinitions>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="20" />
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="40" />
      </Grid.ColumnDefinitions>

      <Border Background="{DynamicResource NeutralControlBackgroundColor}" 
              Grid.Row="0" 
              Grid.ColumnSpan="3" />

      <Button Classes="framelessButton" Grid.Column="0" Click="On_ButtonCollapse_Click">
        <StackPanel>
          <controls:Icon Type="Collapsed" IsVisible="{Binding Collapsed}" />
          <controls:Icon Type="Expanded" IsVisible="{Binding !Collapsed}" />
        </StackPanel>
      </Button>
      <StackPanel Grid.Column="1"
                  Background="Transparent"
                  Opacity="{Binding DisplayOpacity}"
                  Orientation="Horizontal">
        <StackPanel.ContextMenu>
          <ContextMenu>
            <MenuItem Header="{x:Static localization:Localization.SettingContainer_ContextMenu_MoveToTop}"
                      Click="On_MenuItemMoveToTop_Click">
              <MenuItem.Icon>
                <controls:Icon Type="MoveTop" />
              </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="{x:Static localization:Localization.SettingContainer_ContextMenu_MoveToBottom}"
                      Click="On_MenuItemMoveToBottom_Click">
              <MenuItem.Icon>
                <controls:Icon Type="MoveBottom" />
              </MenuItem.Icon>
            </MenuItem>
            <Separator>
              <Separator.IsVisible>
                <MultiBinding Converter="{x:Static BoolConverters.Or}">
                  <MultiBinding.Bindings>
                    <Binding Path="IsRedefineInFileSettingsVisible" />
                    <Binding Path="IsDuplicateVisible" />
                  </MultiBinding.Bindings>
                </MultiBinding>
              </Separator.IsVisible>
            </Separator>
            <MenuItem Header="{x:Static localization:Localization.SettingContainer_ContextMenu_RedefineInFileSettings}"
                      Click="On_MenuItemRedefineInFileSettings_Click"
                      IsVisible="{Binding IsRedefineInFileSettingsVisible}">
              <MenuItem.Icon>
                <controls:Icon Type="Redefine" />
              </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="{x:Static localization:Localization.SettingContainer_ContextMenu_Duplicate}"
                      Click="On_MenuItemDuplicate_Click"
                      IsVisible="{Binding IsDuplicateVisible}">
              <MenuItem.Icon>
                <controls:Icon Type="Duplicate" />
              </MenuItem.Icon>
            </MenuItem>
            <Separator />
            <MenuItem Header="{x:Static localization:Localization.SettingContainer_ContextMenu_DeleteSetting}"
                      Click="On_MenuItemDeleteSetting_Click">
              <MenuItem.Icon>
                <controls:Icon Type="Trash" />
              </MenuItem.Icon>
            </MenuItem>
          </ContextMenu>
        </StackPanel.ContextMenu>

        <!--Enable/disable in setting-->
        <Button Classes="framelessButton" 
                Click="On_ButtonEnable_Click" 
                IsVisible="{Binding !ChangeEnabledStateInContainer}">
          <StackPanel>
            <controls:Icon Type="CheckedBox"
                           IsVisible="{Binding Setting.IsEnabled}"
                           ToolTip.Tip="{x:Static localization:Localization.SettingContainer_Enabled_Tooltip}"/>
            <controls:Icon Type="UncheckedBox"
                           IsVisible="{Binding !Setting.IsEnabled}"
                           ToolTip.Tip="{x:Static localization:Localization.SettingContainer_Disabled_Tooltip}"/>
          </StackPanel>
        </Button>
        <!--Enable/disable in container-->
        <Button Classes="framelessButton"
                Click="On_ButtonContainerEnable_Click"
                IsVisible="{Binding ChangeEnabledStateInContainer}">
          <StackPanel>
            <controls:Icon Type="CheckedBox"
                           IsVisible="{Binding IsEnabled}"
                           ToolTip.Tip="{x:Static localization:Localization.SettingContainer_Enabled_Tooltip}"/>
            <controls:Icon Type="UncheckedBox"
                           IsVisible="{Binding !IsEnabled}"
                           ToolTip.Tip="{x:Static localization:Localization.SettingContainer_Disabled_Tooltip}"/>
          </StackPanel>
        </Button>
        <controls:Icon Type="Overwritten"
                       IsVisible="{Binding Overwritten}"
                       ToolTip.Tip="{x:Static localization:Localization.SettingContainer_Overwritten_Tooltip}"/>
        <controls:Icon Type="Unavailable"
                       IsVisible="{Binding UnderlyingSettingDisabled}"
                       ToolTip.Tip="{x:Static localization:Localization.SettingContainer_UnderlyingSettingDisabled_Tooltip}"/>
        <TextBlock Margin="4,0,0,0"
                   VerticalAlignment="Center"
                   TextDecorations="{Binding DisplayTextDecoration}"
                   Foreground="{DynamicResource NeutralControlForegroundColor}"
                   Text="{Binding Path=Setting, Converter={StaticResource IHurlSettingToLocalizedTitleConverter}}"/>
        <TextBlock Margin="4,0,0,0"
                   VerticalAlignment="Center"
                   IsVisible="{Binding Collapsed}"
                   TextDecorations="{Binding DisplayTextDecoration}"
                   Foreground="{DynamicResource NeutralControlForegroundMutedColor}"
                   Text="{Binding Setting.DisplayString}"/>
      </StackPanel>

      <StackPanel Orientation="Horizontal"
                  Background="{DynamicResource NeutralControlBackgroundColor}"
                  Grid.Column="2"
                  IsVisible="{Binding CanMove}">
        <Button Classes="framelessButton"
                Click="On_ButtonMoveUp_Click">
          <controls:Icon Type="MoveUp" />
        </Button>
        <Button Classes="framelessButton"
                Click="On_ButtonMoveDown_Click">
          <controls:Icon Type="MoveDown" />
        </Button>
      </StackPanel>
      <StackPanel IsVisible="{Binding !Collapsed}"
                  Opacity="{Binding DisplayOpacity}"
                  Grid.ColumnSpan="3"
                  Grid.Row="1">
        <ContentControl Content="{Binding Setting}"
                        IsEnabled="{Binding !IsReadOnly}" />
      </StackPanel>
    </Grid>
    <Border BorderThickness="0,0,0,1"
            BorderBrush="{DynamicResource NeutralControlBackgroundColor}"/>
  </Grid>
</UserControl>
